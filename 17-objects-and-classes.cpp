// --------------- Объекты и классы ------------------

/*
#######################################################
Объекты и классы

∙ Структуру с методами, конструкторами и деструктором
называют классом.
∙ Экземпляр (значение) класса называется объектом.

struct IntArray {
    explicit IntArray ( size_t size );
    ~ IntArray ();
    int & get ( size_t i );
    size_t size ;
    int * data ;
};
IntArray a (10);
IntArray b = {20 , new int [20]}; // ошибка


#######################################################
Объекты в динамической памяти


Создание

Для создания объекта в динамической памяти используется
оператор new, он отвечает за вызов конструктора.

struct IntArray {
    explicit IntArray ( size_t size );
    ~ IntArray ();
    size_t size ;
    int * data ;
};
// выделение памяти и создание объекта
IntArray * pa = new IntArray (10);
// только выделение памяти
IntArray * pb = ( IntArray *) malloc ( sizeof ( IntArray ));


Удаление

При вызове оператора delete вызывается деструктор объекта.

// выделение памяти и создание объекта
IntArray * pa = new IntArray (10);
// вызов деструктора и освобождение памяти
delete pa ;
Операторы new [] и delete [] работают аналогично
// выделение памяти и создание 10 объектов
// (вызывается конструктор по умолчанию)
IntArray * pa = new IntArray [10];
// вызов деструкторов и освобождение памяти
delete [] pa ;


#######################################################
Placement new

// выделение памяти
void * p = myalloc ( sizeof ( IntArray ));
// создание объекта по адресу p
IntArray * a = new ( p ) IntArray (10);
// явный вызов деструктора
a->~IntArray ();
// освобождение памяти
myfree( p );
Проблемы с выравниванием:
char b [ sizeof ( IntArray )];
new (b) IntArray (20); // потенциальная проблема
*/